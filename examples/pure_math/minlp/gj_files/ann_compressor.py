# MINLP rewritten by GreyJack Solver translator
#
# Equation counts
#     Total        E        G        L        N        X        C        B
#        95       95        0        0        0        0        0        0
#
# Variable counts
#                  x        b        i      s1s      s2s       sc       si
#     Total     cont   binary  integer     sos1     sos2    scont     sint
#        96       96        0        0        0        0        0        0
# FX      0
#
# Nonzero counts
#     Total    const       NL
#       407      367       40
#

from math import pi, log, exp
from greyjack.pure_math.MathModel import MathModel
from greyjack.pure_math.Objective import Objective
from greyjack.pure_math.Constraint import Constraint
from greyjack.pure_math.variables.FloatVar import FloatVar
from greyjack.pure_math.variables.IntegerVar import IntegerVar
from greyjack.pure_math.variables.BinaryVar import BinaryVar

def build_math_model( use_hard_soft_score=True ):

    m = model = math_model = MathModel()
    
    m.variables["x1"] = FloatVar(-100, 100)
    m.variables["x2"] = FloatVar(-100, 100)
    m.variables["x3"] = FloatVar(-100, 100)
    m.variables["x4"] = FloatVar(0, 1)
    m.variables["x5"] = FloatVar(-100, 100)
    m.variables["x6"] = FloatVar(-100, 100)
    m.variables["x7"] = FloatVar(-100, 100)
    m.variables["x8"] = FloatVar(-100, 100)
    m.variables["x9"] = FloatVar(-100, 100)
    m.variables["x10"] = FloatVar(-100, 100)
    m.variables["x11"] = FloatVar(-100, 100)
    m.variables["x12"] = FloatVar(-100, 100)
    m.variables["x13"] = FloatVar(-100, 100)
    m.variables["x14"] = FloatVar(-100, 100)
    m.variables["x15"] = FloatVar(-100, 100)
    m.variables["x16"] = FloatVar(-100, 100)
    m.variables["x17"] = FloatVar(-100, 100)
    m.variables["x18"] = FloatVar(-100, 100)
    m.variables["x19"] = FloatVar(-100, 100)
    m.variables["x20"] = FloatVar(-100, 100)
    m.variables["x21"] = FloatVar(-100, 100)
    m.variables["x22"] = FloatVar(-100, 100)
    m.variables["x23"] = FloatVar(-100, 100)
    m.variables["x24"] = FloatVar(-100, 100)
    m.variables["x25"] = FloatVar(-100, 100)
    m.variables["x26"] = FloatVar(-100, 100)
    m.variables["x27"] = FloatVar(-100, 100)
    m.variables["x28"] = FloatVar(-100, 100)
    m.variables["x29"] = FloatVar(-100, 100)
    m.variables["x30"] = FloatVar(-100, 100)
    m.variables["x31"] = FloatVar(-100, 100)
    m.variables["x32"] = FloatVar(-100, 100)
    m.variables["x33"] = FloatVar(-100, 100)
    m.variables["x34"] = FloatVar(-100, 100)
    m.variables["x35"] = FloatVar(-100, 100)
    m.variables["x36"] = FloatVar(-100, 100)
    m.variables["x37"] = FloatVar(-100, 100)
    m.variables["x38"] = FloatVar(-100, 100)
    m.variables["x39"] = FloatVar(-100, 100)
    m.variables["x40"] = FloatVar(-100, 100)
    m.variables["x41"] = FloatVar(-100, 100)
    m.variables["x42"] = FloatVar(-100, 100)
    m.variables["x43"] = FloatVar(-100, 100)
    m.variables["x44"] = FloatVar(-100, 100)
    m.variables["x45"] = FloatVar(-100, 100)
    m.variables["x46"] = FloatVar(-100, 100)
    m.variables["x47"] = FloatVar(-100, 100)
    m.variables["x48"] = FloatVar(-100, 100)
    m.variables["x49"] = FloatVar(-100, 100)
    m.variables["x50"] = FloatVar(-100, 100)
    m.variables["x51"] = FloatVar(-100, 100)
    m.variables["x52"] = FloatVar(-100, 100)
    m.variables["x53"] = FloatVar(-100, 100)
    m.variables["x54"] = FloatVar(-100, 100)
    m.variables["x55"] = FloatVar(-100, 100)
    m.variables["x56"] = FloatVar(-100, 100)
    m.variables["x57"] = FloatVar(-100, 100)
    m.variables["x58"] = FloatVar(-100, 100)
    m.variables["x59"] = FloatVar(-100, 100)
    m.variables["x60"] = FloatVar(-100, 100)
    m.variables["x61"] = FloatVar(-100, 100)
    m.variables["x62"] = FloatVar(-100, 100)
    m.variables["x63"] = FloatVar(-100, 100)
    m.variables["x64"] = FloatVar(-100, 100)
    m.variables["x65"] = FloatVar(-100, 100)
    m.variables["x66"] = FloatVar(-100, 100)
    m.variables["x67"] = FloatVar(-100, 100)
    m.variables["x68"] = FloatVar(-100, 100)
    m.variables["x69"] = FloatVar(-100, 100)
    m.variables["x70"] = FloatVar(-100, 100)
    m.variables["x71"] = FloatVar(-100, 100)
    m.variables["x72"] = FloatVar(-100, 100)
    m.variables["x73"] = FloatVar(-100, 100)
    m.variables["x74"] = FloatVar(-100, 100)
    m.variables["x75"] = FloatVar(-100, 100)
    m.variables["x76"] = FloatVar(-100, 100)
    m.variables["x77"] = FloatVar(-100, 100)
    m.variables["x78"] = FloatVar(-100, 100)
    m.variables["x79"] = FloatVar(-100, 100)
    m.variables["x80"] = FloatVar(-100, 100)
    m.variables["x81"] = FloatVar(-100, 100)
    m.variables["x82"] = FloatVar(-100, 100)
    m.variables["x83"] = FloatVar(-100, 100)
    m.variables["x84"] = FloatVar(-100, 100)
    m.variables["x85"] = FloatVar(-100, 100)
    m.variables["x86"] = FloatVar(-100, 100)
    m.variables["x87"] = FloatVar(-100, 100)
    m.variables["x88"] = FloatVar(-100, 100)
    m.variables["x89"] = FloatVar(-100, 100)
    m.variables["x90"] = FloatVar(-100, 100)
    m.variables["x91"] = FloatVar(-100, 100)
    m.variables["x92"] = FloatVar(-100, 100)
    m.variables["x93"] = FloatVar(-100, 100)
    m.variables["x94"] = FloatVar(-100, 100)
    m.variables["x95"] = FloatVar(-100, 100)
    m.variables["x96"] = FloatVar(-100, 100)
    
    m.objectives["f"] = Objective("minimize", lambda v, u: 120.40939193257074 * v["x29"] * v["x4"] +120.40939193257074 * v["x75"] * (1 - v["x4"]))
    
    m.constraints["e1"] = Constraint(lambda v, u: v["x1"], "==", lambda v, u: 4.5)
    m.constraints["e2"] = Constraint(lambda v, u: v["x2"] - 100 * v["x4"], "==", lambda v, u: 0)
    m.constraints["e3"] = Constraint(lambda v, u: v["x3"] + 100 * v["x4"], "==", lambda v, u: 100)
    m.constraints["e4"] = Constraint(lambda v, u: -v["x2"] + v["x5"], "==", lambda v, u: 0)
    m.constraints["e5"] = Constraint(lambda v, u: -v["x1"] + v["x6"], "==", lambda v, u: 0)
    m.constraints["e6"] = Constraint(lambda v, u: -0.04 * v["x5"] + v["x7"], "==", lambda v, u: -3)
    m.constraints["e7"] = Constraint(lambda v, u: -0.3448275862068966 * v["x6"] + v["x8"], "==", lambda v, u: -1.4137931034482758)
    m.constraints["e8"] = Constraint(lambda v, u: -3.29883729878545 * v["x7"] - 2.21634281184627 * v["x8"] +v["x31"], "==", lambda v, u: -4.74519636814514)
    m.constraints["e9"] = Constraint(lambda v, u: -4.39097392620389 * v["x7"] + 2.70229300136141 * v["x8"] +v["x32"], "==", lambda v, u: -4.1794539909462)
    m.constraints["e10"] = Constraint(lambda v, u: 2.42525489414387 * v["x7"] - 2.14396438801434 * v["x8"] +v["x33"], "==", lambda v, u: 1.78401467718833)
    m.constraints["e11"] = Constraint(lambda v, u: -0.665434334521876 * v["x7"] + 1.29787993619185 * v["x8"] +v["x34"], "==", lambda v, u: -1.11674460513219)
    m.constraints["e12"] = Constraint(lambda v, u: 2.77766394913542 * v["x7"] + 1.74555017902411 * v["x8"] +v["x35"], "==", lambda v, u: 0.597624173984931)
    m.constraints["e13"] = Constraint(lambda v, u: -4.7733972839648 * v["x7"] + 2.41673394043034 * v["x8"] +v["x36"], "==", lambda v, u: 1.42752748364808)
    m.constraints["e14"] = Constraint(lambda v, u: -2.4663429726711 * v["x7"] + 2.38573916130801 * v["x8"] +v["x37"], "==", lambda v, u: 1.17440914003301)
    m.constraints["e15"] = Constraint(lambda v, u: 5.52466754531544 * v["x7"] - 2.06923017046543 * v["x8"] +v["x38"], "==", lambda v, u: -2.90717074600284)
    m.constraints["e16"] = Constraint(lambda v, u: -3.61637061682719 * v["x7"] + 5.51456412860865 * v["x8"] +v["x39"], "==", lambda v, u: 5.64272390748818)
    m.constraints["e17"] = Constraint(lambda v, u: 0.995512979228518 * v["x7"] - 4.09187475401507 * v["x8"] +v["x40"], "==", lambda v, u: -3.89340599335458)
    m.constraints["e18"] = Constraint(lambda v, u: 2 / (exp(2 * v["x31"]) + 1) + v["x9"], "==", lambda v, u: 1)
    m.constraints["e19"] = Constraint(lambda v, u: 2 / (exp(2 * v["x32"]) + 1) + v["x10"], "==", lambda v, u: 1)
    m.constraints["e20"] = Constraint(lambda v, u: 2 / (exp(2 * v["x33"]) + 1) + v["x11"], "==", lambda v, u: 1)
    m.constraints["e21"] = Constraint(lambda v, u: 2 / (exp(2 * v["x34"]) + 1) + v["x12"], "==", lambda v, u: 1)
    m.constraints["e22"] = Constraint(lambda v, u: 2 / (exp(2 * v["x35"]) + 1) + v["x13"], "==", lambda v, u: 1)
    m.constraints["e23"] = Constraint(lambda v, u: 2 / (exp(2 * v["x36"]) + 1) + v["x14"], "==", lambda v, u: 1)
    m.constraints["e24"] = Constraint(lambda v, u: 2 / (exp(2 * v["x37"]) + 1) + v["x15"], "==", lambda v, u: 1)
    m.constraints["e25"] = Constraint(lambda v, u: 2 / (exp(2 * v["x38"]) + 1) + v["x16"], "==", lambda v, u: 1)
    m.constraints["e26"] = Constraint(lambda v, u: 2 / (exp(2 * v["x39"]) + 1) + v["x17"], "==", lambda v, u: 1)
    m.constraints["e27"] = Constraint(lambda v, u: 2 / (exp(2 * v["x40"]) + 1) + v["x18"], "==", lambda v, u: 1)
    m.constraints["e28"] = Constraint(lambda v, u: 0.398852142813582 * v["x9"] - 0.725357344120736 * v["x10"]- 0.387983353041334 * v["x11"] - 0.391659415559979 * v["x12"] +0.288302309312186 * v["x13"] - 0.849799453052077 * v["x14"] - 0.217992356329322 *v["x15"] + 0.486032972888755 * v["x16"] + 0.633874608504516 * v["x17"] +0.650057770234234 * v["x18"] + v["x41"], "==", lambda v, u: 1.72952444050299)
    m.constraints["e29"] = Constraint(lambda v, u: -0.606108375762298 * v["x9"] + 1.05128271107625 * v["x10"]- 0.113407401402558 * v["x11"] - 0.685128435722532 * v["x12"] -0.00839355729502805 * v["x13"] + 0.72324079108208 * v["x14"] - 1.54800905346302 *v["x15"] + 0.739614279155593 * v["x16"] - 0.0672266652749378 * v["x17"] -0.862069039273904 * v["x18"] + v["x42"], "==", lambda v, u: -1.82152313507679)
    m.constraints["e30"] = Constraint(lambda v, u: 0.017213005528439 * v["x9"] - 0.432991382826051 * v["x10"]- 0.526615385996248 * v["x11"] - 1.74111228306707 * v["x12"] +0.0927253728709128 * v["x13"] - 0.714238249447 * v["x14"] - 2.30412079128021 *v["x15"] - 0.307687532319036 * v["x16"] + 0.685277679084365 * v["x17"] +0.298152813152174 * v["x18"] + v["x43"], "==", lambda v, u: -1.94871746897132)
    m.constraints["e31"] = Constraint(lambda v, u: -0.254425130089128 * v["x9"] + 0.982857591863807 * v["x10"]- 1.12188627220446 * v["x11"] + 0.953177569130776 * v["x12"] + 1.16324832732783* v["x13"] - 0.583334671787914 * v["x14"] - 1.46286282166184 * v["x15"] -0.740744196362748 * v["x16"] + 0.156187890973621 * v["x17"] + 0.473721758540603 *v["x18"] + v["x44"], "==", lambda v, u: 0.750110448454269)
    m.constraints["e32"] = Constraint(lambda v, u: 0.358841679803966 * v["x9"] - 0.909769646581453 * v["x10"]- 0.5400556368999 * v["x11"] - 1.92581231012236 * v["x12"] - 0.143289578857379 *v["x13"] + 1.11041979527607 * v["x14"] - 0.806556686522453 * v["x15"] +1.31979752840351 * v["x16"] - 2.83201899803365 * v["x17"] - 1.4165064435108 *v["x18"] + v["x45"], "==", lambda v, u: -0.155525493921263)
    m.constraints["e33"] = Constraint(lambda v, u: 0.876963350723843 * v["x9"] + 1.68895367151327 * v["x10"] -1.01792289921342 * v["x11"] + 0.481816149447196 * v["x12"] - 0.681037723637203 *v["x13"] - 0.221547242667722 * v["x14"] - 0.153701721119032 * v["x15"] -0.387789381638438 * v["x16"] - 0.534863109743709 * v["x17"] + 0.429118392881899 *v["x18"] + v["x46"], "==", lambda v, u: -0.182171157802204)
    m.constraints["e34"] = Constraint(lambda v, u: 0.295071408357937 * v["x9"] + 0.615013493949934 * v["x10"]- 0.477319899374172 * v["x11"] + 0.669337407546281 * v["x12"] -0.659568388812123 * v["x13"] - 2.87966615253197 * v["x14"] - 1.18319325324759 *v["x15"] - 0.317508919826113 * v["x16"] - 0.0260541413647632 * v["x17"] -0.613914515498283 * v["x18"] + v["x47"], "==", lambda v, u: -0.525879231367697)
    m.constraints["e35"] = Constraint(lambda v, u: -0.276877372242598 * v["x9"] - 0.313761370734112 * v["x10"]+ 0.437283574367938 * v["x11"] + 1.40935113091552 * v["x12"] - 0.239224962403201* v["x13"] + 1.25079738013603 * v["x14"] - 0.862457167086818 * v["x15"] +0.728247439675487 * v["x16"] - 0.422374486028782 * v["x17"] - 1.57017436743666 *v["x18"] + v["x48"], "==", lambda v, u: 0.851092831485534)
    m.constraints["e36"] = Constraint(lambda v, u: 0.0222234768795211 * v["x9"] - 0.17355526816404 * v["x10"]+ 1.15591927972987 * v["x11"] + 1.98476876674976 * v["x12"] + 0.10670750595954 *v["x13"] + 0.363095670968738 * v["x14"] + 1.67891067831231 * v["x15"] +0.581167798267274 * v["x16"] - 0.201190601410721 * v["x17"] + 0.862612980547481 *v["x18"] + v["x49"], "==", lambda v, u: 1.74557292553105)
    m.constraints["e37"] = Constraint(lambda v, u: 1.5513910853905 * v["x9"] - 1.468539025819 * v["x10"] -0.106950283907874 * v["x11"] - 2.47794942642174 * v["x12"] - 0.120836180137454 *v["x13"] - 0.189856190121489 * v["x14"] - 0.488776919915584 * v["x15"] -0.299287142871813 * v["x16"] - 0.786524342476143 * v["x17"] - 0.171942752553922 *v["x18"] + v["x50"], "==", lambda v, u: -1.52550869349925)
    m.constraints["e38"] = Constraint(lambda v, u: 2 / (exp(2 * v["x41"]) + 1) + v["x19"], "==", lambda v, u: 1)
    m.constraints["e39"] = Constraint(lambda v, u: 2 / (exp(2 * v["x42"]) + 1) + v["x20"], "==", lambda v, u: 1)
    m.constraints["e40"] = Constraint(lambda v, u: 2 / (exp(2 * v["x43"]) + 1) + v["x21"], "==", lambda v, u: 1)
    m.constraints["e41"] = Constraint(lambda v, u: 2 / (exp(2 * v["x44"]) + 1) + v["x22"], "==", lambda v, u: 1)
    m.constraints["e42"] = Constraint(lambda v, u: 2 / (exp(2 * v["x45"]) + 1) + v["x23"], "==", lambda v, u: 1)
    m.constraints["e43"] = Constraint(lambda v, u: 2 / (exp(2 * v["x46"]) + 1) + v["x24"], "==", lambda v, u: 1)
    m.constraints["e44"] = Constraint(lambda v, u: 2 / (exp(2 * v["x47"]) + 1) + v["x25"], "==", lambda v, u: 1)
    m.constraints["e45"] = Constraint(lambda v, u: 2 / (exp(2 * v["x48"]) + 1) + v["x26"], "==", lambda v, u: 1)
    m.constraints["e46"] = Constraint(lambda v, u: 2 / (exp(2 * v["x49"]) + 1) + v["x27"], "==", lambda v, u: 1)
    m.constraints["e47"] = Constraint(lambda v, u: 2 / (exp(2 * v["x50"]) + 1) + v["x28"], "==", lambda v, u: 1)
    m.constraints["e48"] = Constraint(lambda v, u: -1.0674 * v["x19"] + 1.2197 * v["x20"] - 1.578 * v["x21"] +1.4501 * v["x22"] + 1.0611 * v["x23"] + 0.52263 * v["x24"] + 0.090589 * v["x25"] -0.78946 * v["x26"] - 1.7347 * v["x27"] + 0.63854 * v["x28"] + v["x30"], "==", lambda v, u: -0.523544433780434)
    m.constraints["e49"] = Constraint(lambda v, u: v["x29"] - 136.23687745314615 * v["x30"], "==", lambda v, u: 165.14897153681486)
    m.constraints["e50"] = Constraint(lambda v, u: -v["x3"] + v["x51"], "==", lambda v, u: 0)
    m.constraints["e51"] = Constraint(lambda v, u: -v["x1"] + v["x52"], "==", lambda v, u: 0)
    m.constraints["e52"] = Constraint(lambda v, u: -0.05714285714285714 * v["x51"] + v["x53"], "==", lambda v, u: -1.8571428571428572)
    m.constraints["e53"] = Constraint(lambda v, u: -0.3448275862068966 * v["x52"] + v["x54"], "==", lambda v, u: -1.4137931034482758)
    m.constraints["e54"] = Constraint(lambda v, u: 4.93640448594107 * v["x53"] + 0.912605578908679 * v["x54"]+ v["x77"], "==", lambda v, u: 4.1270692338668)
    m.constraints["e55"] = Constraint(lambda v, u: 0.816777467188004 * v["x53"] + 5.32033684666278 * v["x54"]+ v["x78"], "==", lambda v, u: -2.32662461492317)
    m.constraints["e56"] = Constraint(lambda v, u: 2.66472390799182 * v["x53"] + 0.362343664737007 * v["x54"]+ v["x79"], "==", lambda v, u: 1.91392918798187)
    m.constraints["e57"] = Constraint(lambda v, u: 2.02628709921665 * v["x53"] + 0.48093844474148 * v["x54"] +v["x80"], "==", lambda v, u: 0.427660620779721)
    m.constraints["e58"] = Constraint(lambda v, u: -1.14069543363375 * v["x53"] + 3.45428737671842 * v["x54"]+ v["x81"], "==", lambda v, u: -1.71791138693198)
    m.constraints["e59"] = Constraint(lambda v, u: -1.73507877664684 * v["x53"] - 3.91745010409221 * v["x54"]+ v["x82"], "==", lambda v, u: 1.09025760296775)
    m.constraints["e60"] = Constraint(lambda v, u: -2.11707508608896 * v["x53"] + 2.33023244949126 * v["x54"]+ v["x83"], "==", lambda v, u: 1.50363786298596)
    m.constraints["e61"] = Constraint(lambda v, u: -2.99151042883558 * v["x53"] + 3.93409732391626 * v["x54"]+ v["x84"], "==", lambda v, u: -0.0181541866671218)
    m.constraints["e62"] = Constraint(lambda v, u: -1.5250601954822 * v["x53"] - 3.17883210470949 * v["x54"] +v["x85"], "==", lambda v, u: 3.45453898493558)
    m.constraints["e63"] = Constraint(lambda v, u: -1.46971647430401 * v["x53"] + 3.34372673401725 * v["x54"]+ v["x86"], "==", lambda v, u: 5.31141965926459)
    m.constraints["e64"] = Constraint(lambda v, u: 2 / (exp(2 * v["x77"]) + 1) + v["x55"], "==", lambda v, u: 1)
    m.constraints["e65"] = Constraint(lambda v, u: 2 / (exp(2 * v["x78"]) + 1) + v["x56"], "==", lambda v, u: 1)
    m.constraints["e66"] = Constraint(lambda v, u: 2 / (exp(2 * v["x79"]) + 1) + v["x57"], "==", lambda v, u: 1)
    m.constraints["e67"] = Constraint(lambda v, u: 2 / (exp(2 * v["x80"]) + 1) + v["x58"], "==", lambda v, u: 1)
    m.constraints["e68"] = Constraint(lambda v, u: 2 / (exp(2 * v["x81"]) + 1) + v["x59"], "==", lambda v, u: 1)
    m.constraints["e69"] = Constraint(lambda v, u: 2 / (exp(2 * v["x82"]) + 1) + v["x60"], "==", lambda v, u: 1)
    m.constraints["e70"] = Constraint(lambda v, u: 2 / (exp(2 * v["x83"]) + 1) + v["x61"], "==", lambda v, u: 1)
    m.constraints["e71"] = Constraint(lambda v, u: 2 / (exp(2 * v["x84"]) + 1) + v["x62"], "==", lambda v, u: 1)
    m.constraints["e72"] = Constraint(lambda v, u: 2 / (exp(2 * v["x85"]) + 1) + v["x63"], "==", lambda v, u: 1)
    m.constraints["e73"] = Constraint(lambda v, u: 2 / (exp(2 * v["x86"]) + 1) + v["x64"], "==", lambda v, u: 1)
    m.constraints["e74"] = Constraint(lambda v, u: -0.19229719566531 * v["x55"] - 0.113229364819046 * v["x56"]- 0.317011984009582 * v["x57"] - 0.208176499331018 * v["x58"] -0.0526893135225106 * v["x59"] + 0.00496874764197475 * v["x60"] - 1.11781664691223* v["x61"] - 0.164747202380028 * v["x62"] + 0.128801038943437 * v["x63"] -0.115050980825826 * v["x64"] + v["x87"], "==", lambda v, u: -1.61331605529523)
    m.constraints["e75"] = Constraint(lambda v, u: -1.39561108328297 * v["x55"] + 0.291294577508309 * v["x56"]+ 2.42255053970948 * v["x57"] + 0.806424775519701 * v["x58"] - 0.24700602376048* v["x59"] - 2.86528129248516 * v["x60"] + 0.228041341097786 * v["x61"] -0.919031862096554 * v["x62"] - 0.331591530574725 * v["x63"] - 0.862221243067094 *v["x64"] + v["x88"], "==", lambda v, u: -1.14616698593978)
    m.constraints["e76"] = Constraint(lambda v, u: -1.5279242841873 * v["x55"] - 0.698226236065608 * v["x56"]+ 1.55481625080507 * v["x57"] - 0.712477732925898 * v["x58"] - 0.879321205828354* v["x59"] - 0.999578930453093 * v["x60"] + 0.436064389773445 * v["x61"] -1.20491503278419 * v["x62"] + 0.0828027271237818 * v["x63"] + 1.16436684334948 *v["x64"] + v["x89"], "==", lambda v, u: -1.26487905494015)
    m.constraints["e77"] = Constraint(lambda v, u: -1.31136556313664 * v["x55"] + 0.688090162957568 * v["x56"]- 0.483533126996118 * v["x57"] + 0.317208594550559 * v["x58"] -0.987077283548825 * v["x59"] + 2.03966860668343 * v["x60"] - 1.28045374550174 *v["x61"] - 1.17174317918226 * v["x62"] - 1.92490816822108 * v["x63"] +1.88902014251631 * v["x64"] + v["x90"], "==", lambda v, u: -2.43368306899489)
    m.constraints["e78"] = Constraint(lambda v, u: 0.663187111420449 * v["x55"] + 0.653673216749544 * v["x56"]- 2.05130150144194 * v["x57"] - 0.038085494374431 * v["x58"] - 1.47243466819752* v["x59"] - 2.97625982340582 * v["x60"] + 2.99369146603845 * v["x61"] -1.41254919999138 * v["x62"] + 0.792703266075634 * v["x63"] - 1.20920862561178 *v["x64"] + v["x91"], "==", lambda v, u: -0.145245935667929)
    m.constraints["e79"] = Constraint(lambda v, u: 3.16558479304872 * v["x55"] + 0.610800921707547 * v["x56"]- 3.91566418422506 * v["x57"] + 0.690696672854988 * v["x58"] - 1.1387592986803 *v["x59"] - 1.55320919936001 * v["x60"] - 0.649315965120837 * v["x61"] -3.93545445106757 * v["x62"] - 1.72059703275849 * v["x63"] + 0.352306217462982 *v["x64"] + v["x92"], "==", lambda v, u: -0.544825168753145)
    m.constraints["e80"] = Constraint(lambda v, u: -0.832946328830514 * v["x55"] - 0.261706335203891 * v["x56"]- 1.52961004768381 * v["x57"] - 0.96278230549486 * v["x58"] - 0.0558260797192328* v["x59"] + 0.796583270628257 * v["x60"] + 0.231506642471326 * v["x61"] +0.699291918288105 * v["x62"] + 0.38426656703623 * v["x63"] + 1.46531125311878 *v["x64"] + v["x93"], "==", lambda v, u: 0.336652248890323)
    m.constraints["e81"] = Constraint(lambda v, u: 1.95060055587423 * v["x55"] + 1.84279061221506 * v["x56"] -0.225343280513967 * v["x57"] + 1.32570761854527 * v["x58"] - 0.0145976190506455 *v["x59"] + 2.3127770319283 * v["x60"] - 1.72621008535973 * v["x61"] +0.913597417647886 * v["x62"] + 1.22514837154043 * v["x63"] + 0.0387545896912135 *v["x64"] + v["x94"], "==", lambda v, u: -0.182365009499401)
    m.constraints["e82"] = Constraint(lambda v, u: 0.45472386490334 * v["x55"] - 1.91223566080678 * v["x56"] -0.537347924651761 * v["x57"] + 0.98607719903189 * v["x58"] + 0.225915202471944 *v["x59"] + 2.41658375893019 * v["x60"] + 1.5400112823527 * v["x61"] -0.590930400398464 * v["x62"] - 2.14543603917029 * v["x63"] - 1.15870755844912 *v["x64"] + v["x95"], "==", lambda v, u: 3.71721040155117)
    m.constraints["e83"] = Constraint(lambda v, u: -2.23225023028356 * v["x55"] + 0.327733125529555 * v["x56"]+ 0.310848878283525 * v["x57"] + 1.05010074838177 * v["x58"] - 0.831450614261062* v["x59"] - 0.501691134298998 * v["x60"] - 3.24606656818691 * v["x61"] +0.313457236205627 * v["x62"] - 0.58950348835461 * v["x63"] + 1.96788365310352 *v["x64"] + v["x96"], "==", lambda v, u: 0.451617778637158)
    m.constraints["e84"] = Constraint(lambda v, u: 2 / (exp(2 * v["x87"]) + 1) + v["x65"], "==", lambda v, u: 1)
    m.constraints["e85"] = Constraint(lambda v, u: 2 / (exp(2 * v["x88"]) + 1) + v["x66"], "==", lambda v, u: 1)
    m.constraints["e86"] = Constraint(lambda v, u: 2 / (exp(2 * v["x89"]) + 1) + v["x67"], "==", lambda v, u: 1)
    m.constraints["e87"] = Constraint(lambda v, u: 2 / (exp(2 * v["x90"]) + 1) + v["x68"], "==", lambda v, u: 1)
    m.constraints["e88"] = Constraint(lambda v, u: 2 / (exp(2 * v["x91"]) + 1) + v["x69"], "==", lambda v, u: 1)
    m.constraints["e89"] = Constraint(lambda v, u: 2 / (exp(2 * v["x92"]) + 1) + v["x70"], "==", lambda v, u: 1)
    m.constraints["e90"] = Constraint(lambda v, u: 2 / (exp(2 * v["x93"]) + 1) + v["x71"], "==", lambda v, u: 1)
    m.constraints["e91"] = Constraint(lambda v, u: 2 / (exp(2 * v["x94"]) + 1) + v["x72"], "==", lambda v, u: 1)
    m.constraints["e92"] = Constraint(lambda v, u: 2 / (exp(2 * v["x95"]) + 1) + v["x73"], "==", lambda v, u: 1)
    m.constraints["e93"] = Constraint(lambda v, u: 2 / (exp(2 * v["x96"]) + 1) + v["x74"], "==", lambda v, u: 1)
    m.constraints["e94"] = Constraint(lambda v, u: 0.94504 * v["x65"] + 0.063174 * v["x66"] + 1.23 * v["x67"] +0.0045084 * v["x68"] - 0.080538 * v["x69"] + 0.0086604 * v["x70"] - 0.027211 * v["x71"]+ 0.013266 * v["x72"] + 0.27219 * v["x73"] + 1.7486 * v["x74"] + v["x76"], "==", lambda v, u: 0.411768749636318)
    m.constraints["e95"] = Constraint(lambda v, u: v["x75"] - 143.0487213258034 * v["x76"], "==", lambda v, u: 173.4064201136556)
    
    return m