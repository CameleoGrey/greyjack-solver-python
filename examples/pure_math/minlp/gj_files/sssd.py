# MINLP rewritten by GreyJack Solver translator
#
# Equation counts
#     Total        E        G        L        N        X        C        B
#        79       23        0       56        0        0        0        0
#
# Variable counts
#                  x        b        i      s1s      s2s       sc       si
#     Total     cont   binary  integer     sos1     sos2    scont     sint
#       176       32      144        0        0        0        0        0
# FX      0
#
# Nonzero counts
#     Total    const       NL
#       384      360       24
#

from math import pi, log, exp
from greyjack.pure_math.MathModel import MathModel
from greyjack.pure_math.Objective import Objective
from greyjack.pure_math.Constraint import Constraint
from greyjack.pure_math.variables.FloatVar import FloatVar
from greyjack.pure_math.variables.IntegerVar import IntegerVar
from greyjack.pure_math.variables.BinaryVar import BinaryVar

def build_math_model( use_hard_soft_score=True ):

    m = model = math_model = MathModel()
    
    m.variables["b1"] = BinaryVar(  )
    m.variables["b2"] = BinaryVar(  )
    m.variables["b3"] = BinaryVar(  )
    m.variables["b4"] = BinaryVar(  )
    m.variables["b5"] = BinaryVar(  )
    m.variables["b6"] = BinaryVar(  )
    m.variables["b7"] = BinaryVar(  )
    m.variables["b8"] = BinaryVar(  )
    m.variables["b9"] = BinaryVar(  )
    m.variables["b10"] = BinaryVar(  )
    m.variables["b11"] = BinaryVar(  )
    m.variables["b12"] = BinaryVar(  )
    m.variables["b13"] = BinaryVar(  )
    m.variables["b14"] = BinaryVar(  )
    m.variables["b15"] = BinaryVar(  )
    m.variables["b16"] = BinaryVar(  )
    m.variables["b17"] = BinaryVar(  )
    m.variables["b18"] = BinaryVar(  )
    m.variables["b19"] = BinaryVar(  )
    m.variables["b20"] = BinaryVar(  )
    m.variables["b21"] = BinaryVar(  )
    m.variables["b22"] = BinaryVar(  )
    m.variables["b23"] = BinaryVar(  )
    m.variables["b24"] = BinaryVar(  )
    m.variables["b25"] = BinaryVar(  )
    m.variables["b26"] = BinaryVar(  )
    m.variables["b27"] = BinaryVar(  )
    m.variables["b28"] = BinaryVar(  )
    m.variables["b29"] = BinaryVar(  )
    m.variables["b30"] = BinaryVar(  )
    m.variables["b31"] = BinaryVar(  )
    m.variables["b32"] = BinaryVar(  )
    m.variables["b33"] = BinaryVar(  )
    m.variables["b34"] = BinaryVar(  )
    m.variables["b35"] = BinaryVar(  )
    m.variables["b36"] = BinaryVar(  )
    m.variables["b37"] = BinaryVar(  )
    m.variables["b38"] = BinaryVar(  )
    m.variables["b39"] = BinaryVar(  )
    m.variables["b40"] = BinaryVar(  )
    m.variables["b41"] = BinaryVar(  )
    m.variables["b42"] = BinaryVar(  )
    m.variables["b43"] = BinaryVar(  )
    m.variables["b44"] = BinaryVar(  )
    m.variables["b45"] = BinaryVar(  )
    m.variables["b46"] = BinaryVar(  )
    m.variables["b47"] = BinaryVar(  )
    m.variables["b48"] = BinaryVar(  )
    m.variables["b49"] = BinaryVar(  )
    m.variables["b50"] = BinaryVar(  )
    m.variables["b51"] = BinaryVar(  )
    m.variables["b52"] = BinaryVar(  )
    m.variables["b53"] = BinaryVar(  )
    m.variables["b54"] = BinaryVar(  )
    m.variables["b55"] = BinaryVar(  )
    m.variables["b56"] = BinaryVar(  )
    m.variables["b57"] = BinaryVar(  )
    m.variables["b58"] = BinaryVar(  )
    m.variables["b59"] = BinaryVar(  )
    m.variables["b60"] = BinaryVar(  )
    m.variables["b61"] = BinaryVar(  )
    m.variables["b62"] = BinaryVar(  )
    m.variables["b63"] = BinaryVar(  )
    m.variables["b64"] = BinaryVar(  )
    m.variables["b65"] = BinaryVar(  )
    m.variables["b66"] = BinaryVar(  )
    m.variables["b67"] = BinaryVar(  )
    m.variables["b68"] = BinaryVar(  )
    m.variables["b69"] = BinaryVar(  )
    m.variables["b70"] = BinaryVar(  )
    m.variables["b71"] = BinaryVar(  )
    m.variables["b72"] = BinaryVar(  )
    m.variables["b73"] = BinaryVar(  )
    m.variables["b74"] = BinaryVar(  )
    m.variables["b75"] = BinaryVar(  )
    m.variables["b76"] = BinaryVar(  )
    m.variables["b77"] = BinaryVar(  )
    m.variables["b78"] = BinaryVar(  )
    m.variables["b79"] = BinaryVar(  )
    m.variables["b80"] = BinaryVar(  )
    m.variables["b81"] = BinaryVar(  )
    m.variables["b82"] = BinaryVar(  )
    m.variables["b83"] = BinaryVar(  )
    m.variables["b84"] = BinaryVar(  )
    m.variables["b85"] = BinaryVar(  )
    m.variables["b86"] = BinaryVar(  )
    m.variables["b87"] = BinaryVar(  )
    m.variables["b88"] = BinaryVar(  )
    m.variables["b89"] = BinaryVar(  )
    m.variables["b90"] = BinaryVar(  )
    m.variables["b91"] = BinaryVar(  )
    m.variables["b92"] = BinaryVar(  )
    m.variables["b93"] = BinaryVar(  )
    m.variables["b94"] = BinaryVar(  )
    m.variables["b95"] = BinaryVar(  )
    m.variables["b96"] = BinaryVar(  )
    m.variables["b97"] = BinaryVar(  )
    m.variables["b98"] = BinaryVar(  )
    m.variables["b99"] = BinaryVar(  )
    m.variables["b100"] = BinaryVar(  )
    m.variables["b101"] = BinaryVar(  )
    m.variables["b102"] = BinaryVar(  )
    m.variables["b103"] = BinaryVar(  )
    m.variables["b104"] = BinaryVar(  )
    m.variables["b105"] = BinaryVar(  )
    m.variables["b106"] = BinaryVar(  )
    m.variables["b107"] = BinaryVar(  )
    m.variables["b108"] = BinaryVar(  )
    m.variables["b109"] = BinaryVar(  )
    m.variables["b110"] = BinaryVar(  )
    m.variables["b111"] = BinaryVar(  )
    m.variables["b112"] = BinaryVar(  )
    m.variables["b113"] = BinaryVar(  )
    m.variables["b114"] = BinaryVar(  )
    m.variables["b115"] = BinaryVar(  )
    m.variables["b116"] = BinaryVar(  )
    m.variables["b117"] = BinaryVar(  )
    m.variables["b118"] = BinaryVar(  )
    m.variables["b119"] = BinaryVar(  )
    m.variables["b120"] = BinaryVar(  )
    m.variables["b121"] = BinaryVar(  )
    m.variables["b122"] = BinaryVar(  )
    m.variables["b123"] = BinaryVar(  )
    m.variables["b124"] = BinaryVar(  )
    m.variables["b125"] = BinaryVar(  )
    m.variables["b126"] = BinaryVar(  )
    m.variables["b127"] = BinaryVar(  )
    m.variables["b128"] = BinaryVar(  )
    m.variables["b129"] = BinaryVar(  )
    m.variables["b130"] = BinaryVar(  )
    m.variables["b131"] = BinaryVar(  )
    m.variables["b132"] = BinaryVar(  )
    m.variables["b133"] = BinaryVar(  )
    m.variables["b134"] = BinaryVar(  )
    m.variables["b135"] = BinaryVar(  )
    m.variables["b136"] = BinaryVar(  )
    m.variables["b137"] = BinaryVar(  )
    m.variables["b138"] = BinaryVar(  )
    m.variables["b139"] = BinaryVar(  )
    m.variables["b140"] = BinaryVar(  )
    m.variables["b141"] = BinaryVar(  )
    m.variables["b142"] = BinaryVar(  )
    m.variables["b143"] = BinaryVar(  )
    m.variables["b144"] = BinaryVar(  )
    m.variables["x145"] = FloatVar(0, 10)
    m.variables["x146"] = FloatVar(0, 10)
    m.variables["x147"] = FloatVar(0, 10)
    m.variables["x148"] = FloatVar(0, 10)
    m.variables["x149"] = FloatVar(0, 10)
    m.variables["x150"] = FloatVar(0, 10)
    m.variables["x151"] = FloatVar(0, 10)
    m.variables["x152"] = FloatVar(0, 10)
    m.variables["x153"] = FloatVar(0, 10)
    m.variables["x154"] = FloatVar(0, 10)
    m.variables["x155"] = FloatVar(0, 10)
    m.variables["x156"] = FloatVar(0, 10)
    m.variables["x157"] = FloatVar(0, 10)
    m.variables["x158"] = FloatVar(0, 10)
    m.variables["x159"] = FloatVar(0, 10)
    m.variables["x160"] = FloatVar(0, 10)
    m.variables["x161"] = FloatVar(0, 10)
    m.variables["x162"] = FloatVar(0, 10)
    m.variables["x163"] = FloatVar(0, 10)
    m.variables["x164"] = FloatVar(0, 10)
    m.variables["x165"] = FloatVar(0, 10)
    m.variables["x166"] = FloatVar(0, 10)
    m.variables["x167"] = FloatVar(0, 10)
    m.variables["x168"] = FloatVar(0, 10)
    m.variables["x169"] = FloatVar(0, 10)
    m.variables["x170"] = FloatVar(0, 10)
    m.variables["x171"] = FloatVar(0, 10)
    m.variables["x172"] = FloatVar(0, 10)
    m.variables["x173"] = FloatVar(0, 10)
    m.variables["x174"] = FloatVar(0, 10)
    m.variables["x175"] = FloatVar(0, 10)
    m.variables["x176"] = FloatVar(0, 10)
    
    m.objectives["f"] = Objective("minimize", lambda v, u: 403.928572687557 * v["b1"] +152.992741540361 * v["b2"] + 267.315589205704 * v["b3"] + 401.957253171747 * v["b4"]+ 239.900413376196 * v["b5"] + 172.190748942287 * v["b6"] + 242.754569605376 *v["b7"] + 206.00422281341 * v["b8"] + 175.512360171018 * v["b9"] + 12.4456890694952* v["b10"] + 95.1129504127459 * v["b11"] + 163.523864888208 * v["b12"] +136.749750630694 * v["b13"] + 183.460227957173 * v["b14"] + 154.161364707845 *v["b15"] + 58.2220762837777 * v["b16"] + 427.797333694278 * v["b17"] +124.146285420687 * v["b18"] + 281.762350319908 * v["b19"] + 416.122892408842 *v["b20"] + 286.880720364618 * v["b21"] + 171.930365706852 * v["b22"] +298.680284192437 * v["b23"] + 212.446553403468 * v["b24"] + 334.799175421099 *v["b25"] + 166.360551160919 * v["b26"] + 261.524865566971 * v["b27"] +321.118189558705 * v["b28"] + 275.112120282415 * v["b29"] + 70.1440860194197 *v["b30"] + 281.389498973428 * v["b31"] + 225.606388157132 * v["b32"] +321.213816864959 * v["b33"] + 71.9883302424501 * v["b34"] + 169.588450009557 *v["b35"] + 291.06773760337 * v["b36"] + 283.136668462665 * v["b37"] +418.102856274321 * v["b38"] + 323.382162238167 * v["b39"] + 109.329676669547 *v["b40"] + 225.077476533111 * v["b41"] + 292.549188246279 * v["b42"] +256.821062390988 * v["b43"] + 181.735382103635 * v["b44"] + 361.637553977341 *v["b45"] + 487.443715088842 * v["b46"] + 391.614198813426 * v["b47"] +276.780369289256 * v["b48"] + 790.809160300441 * v["b49"] + 572.306788163427 *v["b50"] + 710.561007303222 * v["b51"] + 710.424717790653 * v["b52"] +882.480677740369 * v["b53"] + 746.52609026712 * v["b54"] + 932.032155531379 *v["b55"] + 673.014016071675 * v["b56"] + 415.137891763513 * v["b57"] +24.1331183147668 * v["b58"] + 232.723756037565 * v["b59"] + 385.530297939342 *v["b60"] + 328.99787719123 * v["b61"] + 412.551506227386 * v["b62"] + 368.4253530904* v["b63"] + 149.097324374568 * v["b64"] + 505.111125566583 * v["b65"] +324.408884140539 * v["b66"] + 422.192328810933 * v["b67"] + 433.424841813569 *v["b68"] + 590.521463309364 * v["b69"] + 601.187176017906 * v["b70"] +639.549861073539 * v["b71"] + 393.266050752522 * v["b72"] + 317.266722109018 *v["b73"] + 366.343507824765 * v["b74"] + 278.701740808319 * v["b75"] +360.414608909582 * v["b76"] + 163.468646330858 * v["b77"] + 496.33685624632 *v["b78"] + 135.080317454783 * v["b79"] + 291.219332583259 * v["b80"] +60.7098769607628 * v["b81"] + 257.274009667912 * v["b82"] + 109.739073857234 *v["b83"] + 105.840898609517 * v["b84"] + 149.608079935928 * v["b85"] +478.2765537338 * v["b86"] + 175.640633384092 * v["b87"] + 164.991725574781 *v["b88"] + 370.179004516539 * v["b89"] + 456.332727530502 * v["b90"] +323.598387892417 * v["b91"] + 428.625530616724 * v["b92"] + 176.797739228846 *v["b93"] + 657.950143580026 * v["b94"] + 146.134286318179 * v["b95"] +347.137285556827 * v["b96"] + 459.855709875116 * v["b97"] + 206.994357545204 *v["b98"] + 317.109585585788 * v["b99"] + 461.635447603175 * v["b100"] +270.249812459436 * v["b101"] + 176.621455199898 * v["b102"] + 266.565650581812 *v["b103"] + 255.042767652375 * v["b104"] + 688.990984467753 * v["b105"] +342.921309942336 * v["b106"] + 508.744698659858 * v["b107"] + 686.009170292228 *v["b108"] + 457.444445796545 * v["b109"] + 133.755629117181 * v["b110"] +451.235917636358 * v["b111"] + 427.625644498357 * v["b112"] + 275.559617400364 *v["b113"] + 356.414463245256 * v["b114"] + 238.594038182377 * v["b115"] +323.736842820792 * v["b116"] + 123.509577347529 * v["b117"] + 537.671376447504 *v["b118"] + 104.741456798329 * v["b119"] + 261.777653762851 * v["b120"] +343.78539425 * v["b121"] + 113.508450322244 * v["b122"] + 69.177220392612 *v["b123"] + 264.047028 * v["b124"] + 87.3113122712859 * v["b125"] + 53.2512330089256* v["b126"] + 390.47730275 * v["b127"] + 123.63305929533 * v["b128"] +73.7850337614663 * v["b129"] + 406.29941025 * v["b130"] + 126.736316912988 *v["b131"] + 75.0745406137203 * v["b132"] + 283.160272 * v["b133"] + 95.8513476067592* v["b134"] + 59.1487898247813 * v["b135"] + 422.01298775 * v["b136"] +132.224826373859 * v["b137"] + 78.5002039603394 * v["b138"] + 269.10096475 *v["b139"] + 95.9362994616171 * v["b140"] + 60.754974511923 * v["b141"] + 395.712942* v["b142"] + 123.433440930338 * v["b143"] + 73.1178281922949 * v["b144"] +93203.2155531379 * v["x145"] + 93203.2155531379 * v["x146"] + 93203.2155531379 *v["x147"] + 93203.2155531379 * v["x148"] + 93203.2155531379 * v["x149"] +93203.2155531379 * v["x150"] + 93203.2155531379 * v["x151"] + 93203.2155531379 *v["x152"] )
    
    m.constraints["e1"] = Constraint(lambda v, u: 0.934836132 * v["b1"] + 0.594101056 * v["b9"] + 1.006108092 *v["b17"] + 0.536490725 * v["b25"] + 1.208018103 * v["b33"] + 0.741534279 * v["b41"] +1.434929666 * v["b49"] + 1.362989351 * v["b57"] + 1.354757088 * v["b65"] +0.875104896 * v["b73"] + 0.83020157 * v["b81"] + 1.181151032 * v["b89"] +0.985426772 * v["b97"] + 1.234184015 * v["b105"] + 0.980634977 * v["b113"] -1.54666509375 * v["x153"] - 3.0933301875 * v["x154"] - 4.63999528125 * v["x155"], "==", lambda v, u: 0)
    m.constraints["e2"] = Constraint(lambda v, u: 0.934836132 * v["b2"] + 0.594101056 * v["b10"] + 1.006108092* v["b18"] + 0.536490725 * v["b26"] + 1.208018103 * v["b34"] + 0.741534279 * v["b42"]+ 1.434929666 * v["b50"] + 1.362989351 * v["b58"] + 1.354757088 * v["b66"] +0.875104896 * v["b74"] + 0.83020157 * v["b82"] + 1.181151032 * v["b90"] +0.985426772 * v["b98"] + 1.234184015 * v["b106"] + 0.980634977 * v["b114"] -1.19326126546875 * v["x156"] - 2.3865225309375 * v["x157"] - 3.57978379640625 *v["x158"], "==", lambda v, u: 0)
    m.constraints["e3"] = Constraint(lambda v, u: 0.934836132 * v["b3"] + 0.594101056 * v["b11"] + 1.006108092* v["b19"] + 0.536490725 * v["b27"] + 1.208018103 * v["b35"] + 0.741534279 * v["b43"]+ 1.434929666 * v["b51"] + 1.362989351 * v["b59"] + 1.354757088 * v["b67"] +0.875104896 * v["b75"] + 0.83020157 * v["b83"] + 1.181151032 * v["b91"] +0.985426772 * v["b99"] + 1.234184015 * v["b107"] + 0.980634977 * v["b115"] -1.54916706890625 * v["x159"] - 3.0983341378125 * v["x160"] - 4.64750120671875 *v["x161"], "==", lambda v, u: 0)
    m.constraints["e4"] = Constraint(lambda v, u: 0.934836132 * v["b4"] + 0.594101056 * v["b12"] + 1.006108092* v["b20"] + 0.536490725 * v["b28"] + 1.208018103 * v["b36"] + 0.741534279 * v["b44"]+ 1.434929666 * v["b52"] + 1.362989351 * v["b60"] + 1.354757088 * v["b68"] +0.875104896 * v["b76"] + 0.83020157 * v["b84"] + 1.181151032 * v["b92"] +0.985426772 * v["b100"] + 1.234184015 * v["b108"] + 0.980634977 * v["b116"] -1.54133366953125 * v["x162"] - 3.0826673390625 * v["x163"] - 4.62400100859375 *v["x164"], "==", lambda v, u: 0)
    m.constraints["e5"] = Constraint(lambda v, u: 0.934836132 * v["b5"] + 0.594101056 * v["b13"] + 1.006108092* v["b21"] + 0.536490725 * v["b29"] + 1.208018103 * v["b37"] + 0.741534279 * v["b45"]+ 1.434929666 * v["b53"] + 1.362989351 * v["b61"] + 1.354757088 * v["b69"] +0.875104896 * v["b77"] + 0.83020157 * v["b85"] + 1.181151032 * v["b93"] +0.985426772 * v["b101"] + 1.234184015 * v["b109"] + 0.980634977 * v["b117"] -1.3728304284375 * v["x165"] - 2.745660856875 * v["x166"] - 4.1184912853125 *v["x167"], "==", lambda v, u: 0)
    m.constraints["e6"] = Constraint(lambda v, u: 0.934836132 * v["b6"] + 0.594101056 * v["b14"] + 1.006108092* v["b22"] + 0.536490725 * v["b30"] + 1.208018103 * v["b38"] + 0.741534279 * v["b46"]+ 1.434929666 * v["b54"] + 1.362989351 * v["b62"] + 1.354757088 * v["b70"] +0.875104896 * v["b78"] + 0.83020157 * v["b86"] + 1.181151032 * v["b94"] +0.985426772 * v["b102"] + 1.234184015 * v["b110"] + 0.980634977 * v["b118"] -1.6224571809375 * v["x168"] - 3.244914361875 * v["x169"] - 4.8673715428125 *v["x170"], "==", lambda v, u: 0)
    m.constraints["e7"] = Constraint(lambda v, u: 0.934836132 * v["b7"] + 0.594101056 * v["b15"] + 1.006108092* v["b23"] + 0.536490725 * v["b31"] + 1.208018103 * v["b39"] + 0.741534279 * v["b47"]+ 1.434929666 * v["b55"] + 1.362989351 * v["b63"] + 1.354757088 * v["b71"] +0.875104896 * v["b79"] + 0.83020157 * v["b87"] + 1.181151032 * v["b95"] +0.985426772 * v["b103"] + 1.234184015 * v["b111"] + 0.980634977 * v["b119"] -1.52407353515625 * v["x171"] - 3.0481470703125 * v["x172"] - 4.57222060546875 *v["x173"], "==", lambda v, u: 0)
    m.constraints["e8"] = Constraint(lambda v, u: 0.934836132 * v["b8"] + 0.594101056 * v["b16"] + 1.006108092* v["b24"] + 0.536490725 * v["b32"] + 1.208018103 * v["b40"] + 0.741534279 * v["b48"]+ 1.434929666 * v["b56"] + 1.362989351 * v["b64"] + 1.354757088 * v["b72"] +0.875104896 * v["b80"] + 0.83020157 * v["b88"] + 1.181151032 * v["b96"] +0.985426772 * v["b104"] + 1.234184015 * v["b112"] + 0.980634977 * v["b120"] -1.50114900421875 * v["x174"] - 3.0022980084375 * v["x175"] - 4.50344701265625 *v["x176"], "==", lambda v, u: 0)
    m.constraints["e9"] = Constraint(lambda v, u: v["b1"] + v["b2"] + v["b3"] + v["b4"] + v["b5"] + v["b6"] + v["b7"] + v["b8"], "==", lambda v, u: 1)
    m.constraints["e10"] = Constraint(lambda v, u: v["b9"] + v["b10"] + v["b11"] + v["b12"] + v["b13"] + v["b14"] + v["b15"]+ v["b16"], "==", lambda v, u: 1)
    m.constraints["e11"] = Constraint(lambda v, u: v["b17"] + v["b18"] + v["b19"] + v["b20"] + v["b21"] + v["b22"] + v["b23"]+ v["b24"], "==", lambda v, u: 1)
    m.constraints["e12"] = Constraint(lambda v, u: v["b25"] + v["b26"] + v["b27"] + v["b28"] + v["b29"] + v["b30"] + v["b31"]+ v["b32"], "==", lambda v, u: 1)
    m.constraints["e13"] = Constraint(lambda v, u: v["b33"] + v["b34"] + v["b35"] + v["b36"] + v["b37"] + v["b38"] + v["b39"]+ v["b40"], "==", lambda v, u: 1)
    m.constraints["e14"] = Constraint(lambda v, u: v["b41"] + v["b42"] + v["b43"] + v["b44"] + v["b45"] + v["b46"] + v["b47"]+ v["b48"], "==", lambda v, u: 1)
    m.constraints["e15"] = Constraint(lambda v, u: v["b49"] + v["b50"] + v["b51"] + v["b52"] + v["b53"] + v["b54"] + v["b55"]+ v["b56"], "==", lambda v, u: 1)
    m.constraints["e16"] = Constraint(lambda v, u: v["b57"] + v["b58"] + v["b59"] + v["b60"] + v["b61"] + v["b62"] + v["b63"]+ v["b64"], "==", lambda v, u: 1)
    m.constraints["e17"] = Constraint(lambda v, u: v["b65"] + v["b66"] + v["b67"] + v["b68"] + v["b69"] + v["b70"] + v["b71"]+ v["b72"], "==", lambda v, u: 1)
    m.constraints["e18"] = Constraint(lambda v, u: v["b73"] + v["b74"] + v["b75"] + v["b76"] + v["b77"] + v["b78"] + v["b79"]+ v["b80"], "==", lambda v, u: 1)
    m.constraints["e19"] = Constraint(lambda v, u: v["b81"] + v["b82"] + v["b83"] + v["b84"] + v["b85"] + v["b86"] + v["b87"]+ v["b88"], "==", lambda v, u: 1)
    m.constraints["e20"] = Constraint(lambda v, u: v["b89"] + v["b90"] + v["b91"] + v["b92"] + v["b93"] + v["b94"] + v["b95"]+ v["b96"], "==", lambda v, u: 1)
    m.constraints["e21"] = Constraint(lambda v, u: v["b97"] + v["b98"] + v["b99"] + v["b100"] + v["b101"] + v["b102"] +v["b103"] + v["b104"], "==", lambda v, u: 1)
    m.constraints["e22"] = Constraint(lambda v, u: v["b105"] + v["b106"] + v["b107"] + v["b108"] + v["b109"] + v["b110"] +v["b111"] + v["b112"], "==", lambda v, u: 1)
    m.constraints["e23"] = Constraint(lambda v, u: v["b113"] + v["b114"] + v["b115"] + v["b116"] + v["b117"] + v["b118"] +v["b119"] + v["b120"], "==", lambda v, u: 1)
    m.constraints["e24"] = Constraint(lambda v, u: v["b121"] + v["b122"] + v["b123"], "<=", lambda v, u: 1)
    m.constraints["e25"] = Constraint(lambda v, u: v["b124"] + v["b125"] + v["b126"], "<=", lambda v, u: 1)
    m.constraints["e26"] = Constraint(lambda v, u: v["b127"] + v["b128"] + v["b129"], "<=", lambda v, u: 1)
    m.constraints["e27"] = Constraint(lambda v, u: v["b130"] + v["b131"] + v["b132"], "<=", lambda v, u: 1)
    m.constraints["e28"] = Constraint(lambda v, u: v["b133"] + v["b134"] + v["b135"], "<=", lambda v, u: 1)
    m.constraints["e29"] = Constraint(lambda v, u: v["b136"] + v["b137"] + v["b138"], "<=", lambda v, u: 1)
    m.constraints["e30"] = Constraint(lambda v, u: v["b139"] + v["b140"] + v["b141"], "<=", lambda v, u: 1)
    m.constraints["e31"] = Constraint(lambda v, u: v["b142"] + v["b143"] + v["b144"], "<=", lambda v, u: 1)
    m.constraints["e32"] = Constraint(lambda v, u: -v["b121"] + v["x153"], "<=", lambda v, u: 0)
    m.constraints["e33"] = Constraint(lambda v, u: -v["b122"] + v["x154"], "<=", lambda v, u: 0)
    m.constraints["e34"] = Constraint(lambda v, u: -v["b123"] + v["x155"], "<=", lambda v, u: 0)
    m.constraints["e35"] = Constraint(lambda v, u: -v["b124"] + v["x156"], "<=", lambda v, u: 0)
    m.constraints["e36"] = Constraint(lambda v, u: -v["b125"] + v["x157"], "<=", lambda v, u: 0)
    m.constraints["e37"] = Constraint(lambda v, u: -v["b126"] + v["x158"], "<=", lambda v, u: 0)
    m.constraints["e38"] = Constraint(lambda v, u: -v["b127"] + v["x159"], "<=", lambda v, u: 0)
    m.constraints["e39"] = Constraint(lambda v, u: -v["b128"] + v["x160"], "<=", lambda v, u: 0)
    m.constraints["e40"] = Constraint(lambda v, u: -v["b129"] + v["x161"], "<=", lambda v, u: 0)
    m.constraints["e41"] = Constraint(lambda v, u: -v["b130"] + v["x162"], "<=", lambda v, u: 0)
    m.constraints["e42"] = Constraint(lambda v, u: -v["b131"] + v["x163"], "<=", lambda v, u: 0)
    m.constraints["e43"] = Constraint(lambda v, u: -v["b132"] + v["x164"], "<=", lambda v, u: 0)
    m.constraints["e44"] = Constraint(lambda v, u: -v["b133"] + v["x165"], "<=", lambda v, u: 0)
    m.constraints["e45"] = Constraint(lambda v, u: -v["b134"] + v["x166"], "<=", lambda v, u: 0)
    m.constraints["e46"] = Constraint(lambda v, u: -v["b135"] + v["x167"], "<=", lambda v, u: 0)
    m.constraints["e47"] = Constraint(lambda v, u: -v["b136"] + v["x168"], "<=", lambda v, u: 0)
    m.constraints["e48"] = Constraint(lambda v, u: -v["b137"] + v["x169"], "<=", lambda v, u: 0)
    m.constraints["e49"] = Constraint(lambda v, u: -v["b138"] + v["x170"], "<=", lambda v, u: 0)
    m.constraints["e50"] = Constraint(lambda v, u: -v["b139"] + v["x171"], "<=", lambda v, u: 0)
    m.constraints["e51"] = Constraint(lambda v, u: -v["b140"] + v["x172"], "<=", lambda v, u: 0)
    m.constraints["e52"] = Constraint(lambda v, u: -v["b141"] + v["x173"], "<=", lambda v, u: 0)
    m.constraints["e53"] = Constraint(lambda v, u: -v["b142"] + v["x174"], "<=", lambda v, u: 0)
    m.constraints["e54"] = Constraint(lambda v, u: -v["b143"] + v["x175"], "<=", lambda v, u: 0)
    m.constraints["e55"] = Constraint(lambda v, u: -v["b144"] + v["x176"], "<=", lambda v, u: 0)
    m.constraints["e56"] = Constraint(lambda v, u: -v["x145"] / (1 + v["x145"]) + v["x153"], "<=", lambda v, u: 0)
    m.constraints["e57"] = Constraint(lambda v, u: -v["x145"] / (1 + v["x145"]) + v["x154"], "<=", lambda v, u: 0)
    m.constraints["e58"] = Constraint(lambda v, u: -v["x145"] / (1 + v["x145"]) + v["x155"], "<=", lambda v, u: 0)
    m.constraints["e59"] = Constraint(lambda v, u: -v["x146"] / (1 + v["x146"]) + v["x156"], "<=", lambda v, u: 0)
    m.constraints["e60"] = Constraint(lambda v, u: -v["x146"] / (1 + v["x146"]) + v["x157"], "<=", lambda v, u: 0)
    m.constraints["e61"] = Constraint(lambda v, u: -v["x146"] / (1 + v["x146"]) + v["x158"], "<=", lambda v, u: 0)
    m.constraints["e62"] = Constraint(lambda v, u: -v["x147"] / (1 + v["x147"]) + v["x159"], "<=", lambda v, u: 0)
    m.constraints["e63"] = Constraint(lambda v, u: -v["x147"] / (1 + v["x147"]) + v["x160"], "<=", lambda v, u: 0)
    m.constraints["e64"] = Constraint(lambda v, u: -v["x147"] / (1 + v["x147"]) + v["x161"], "<=", lambda v, u: 0)
    m.constraints["e65"] = Constraint(lambda v, u: -v["x148"] / (1 + v["x148"]) + v["x162"], "<=", lambda v, u: 0)
    m.constraints["e66"] = Constraint(lambda v, u: -v["x148"] / (1 + v["x148"]) + v["x163"], "<=", lambda v, u: 0)
    m.constraints["e67"] = Constraint(lambda v, u: -v["x148"] / (1 + v["x148"]) + v["x164"], "<=", lambda v, u: 0)
    m.constraints["e68"] = Constraint(lambda v, u: -v["x149"] / (1 + v["x149"]) + v["x165"], "<=", lambda v, u: 0)
    m.constraints["e69"] = Constraint(lambda v, u: -v["x149"] / (1 + v["x149"]) + v["x166"], "<=", lambda v, u: 0)
    m.constraints["e70"] = Constraint(lambda v, u: -v["x149"] / (1 + v["x149"]) + v["x167"], "<=", lambda v, u: 0)
    m.constraints["e71"] = Constraint(lambda v, u: -v["x150"] / (1 + v["x150"]) + v["x168"], "<=", lambda v, u: 0)
    m.constraints["e72"] = Constraint(lambda v, u: -v["x150"] / (1 + v["x150"]) + v["x169"], "<=", lambda v, u: 0)
    m.constraints["e73"] = Constraint(lambda v, u: -v["x150"] / (1 + v["x150"]) + v["x170"], "<=", lambda v, u: 0)
    m.constraints["e74"] = Constraint(lambda v, u: -v["x151"] / (1 + v["x151"]) + v["x171"], "<=", lambda v, u: 0)
    m.constraints["e75"] = Constraint(lambda v, u: -v["x151"] / (1 + v["x151"]) + v["x172"], "<=", lambda v, u: 0)
    m.constraints["e76"] = Constraint(lambda v, u: -v["x151"] / (1 + v["x151"]) + v["x173"], "<=", lambda v, u: 0)
    m.constraints["e77"] = Constraint(lambda v, u: -v["x152"] / (1 + v["x152"]) + v["x174"], "<=", lambda v, u: 0)
    m.constraints["e78"] = Constraint(lambda v, u: -v["x152"] / (1 + v["x152"]) + v["x175"], "<=", lambda v, u: 0)
    m.constraints["e79"] = Constraint(lambda v, u: -v["x152"] / (1 + v["x152"]) + v["x176"], "<=", lambda v, u: 0)
    
    return m